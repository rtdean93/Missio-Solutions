<?php



/**
 * Implements hook_theme().
 */
function fb_social_comments_theme() {
  return array(
    'fb_social_comments_preset' => array(),
  );
}

/**
 * @todo Please document this function.
 * @see http://drupal.org/node/1354
 */
function theme_fb_social_comments_preset() {
  // TODO Number of parameters in this theme funcion does not match number of parameters found in hook_theme.
  $xid = url($_GET['q'], array(
    'absolute' => TRUE,
    'alias' => TRUE,
  ));
  
  $extra = array();
  
  $extra['xid'] = urlencode($xid);
  
  // migrate to the new version of facebook comments
  $migrated = variable_get('fb_social_comments_migrated', 0);
  if ($migrated){
	$extra['migrated'] = '1';
  }
  else {
    $extra['href'] = fb_social_url($_GET['q']); 
  }
  
  if ($css = variable_get('fb_social_comments_css', '')) {
    $extra['css'] = $css;
  }
  
  
  return theme('fb_social_preset', array('preset' => $preset, 'extra' => $extra));
}

/**
 * Implements hook_block_info().
 */
function fb_social_comments_block_info() {
  if (TRUE) {
    foreach ( $presets as $preset ) {
      if ($preset->settings['block']) {
        $blocks[$preset->name] = array(
          'info' => $preset->name . ' block',
        );
      }
    }
    return $blocks;
  }
}

/**
 * Implements hook_block_view().
 */
function fb_social_comments_block_view($delta) {
  if (TRUE) {
    $block['subject'] = t('');
    $preset = fb_social_preset_load($name = $delta, $reset = FALSE);
    $block['content'] = theme('fb_social_comments_preset', $preset);
    return $block;
  }
}

/**
 * Implements hook_block().
 */
function fb_social_comments_block_OLD($op = 'list', $delta = 0, $edit = array()) {
  // TODO Remaining code in this function needs to be moved to the appropriate new hook function.
  // load all presets
  $presets = fb_social_enabled_presets('comments');
}

/**
 * Implements hook_content_extra_fields().
 */
function fb_social_comments_content_extra_fields($type_name) {
  $presets = fb_social_enabled_presets('comments');

  foreach ( $presets as $preset ) {
    if (fb_social_comments_type($preset, $type_name)) {
      $extras['fb_social_comments_' . $preset->name] = array(
        'label' => t('Facebook social:  comments plugin'),
        'description' => t('The "comments" plugin field from ' . $preset->name . ' preset'),
        'weight' => 20  , //sink down
      );
      return $extras;
    }
  }
}

/**
 * Implements hook_node_view().
 */
function fb_social_comments_node_view($node, $view_mode = 'full') {
  $presets = fb_social_enabled_presets('comments');

  foreach ( $presets as $preset ) {

    if ($node->status && fb_social_comments_type($preset, $node->type)) {
      if ($a4) { //only in page view
        $output = theme('fb_social_comments_preset', $preset);
        $weight = (module_exists('content')) ? content_extra_field_weight($node->type, 'fb_social_comments_' . $preset->name) : 20;
        $node->content['fb_social_comments_' . $preset->name] = array(
          '#weight' => $weight,
          '#value' => $output,
        );
      }
    }
  }
}

/**
 * Implements hook_nodeapi().
 */
function fb_social_comments_nodeapi_OLD(&$node, $op, $a3 = NULL, $a4 = NULL) { }

/**
 * Implementation of hook fb_social_plugins_info
 */
function fb_social_comments_fb_social_plugins_info() {
  $info = array();
  $info['comments'] = array(
    'name' => 'comments',
    'description' => 'comments plugin',
  );

  return $info;
}

/**
 * Implements hook_ctools_plugin_api().
 */
function fb_social_comments_ctools_plugin_api($module, $api) {
  if ($module == 'boxes' && $api == 'plugins') {
    return array(
      'version' => 1,
    );
  }
}

/**
 * Implements hook_boxes_plugins().
 */
function fb_social_comments_boxes_plugins() {
  $info = array();

  $info['fb_social_comments_boxes_comments'] = array(
    'title' => 'facebook social comments',
    'handler' => array(
      'class' => 'fb_social_comments_box',
      'file' => 'fb_social_comments_boxes.inc',
      'path' => drupal_get_path('module', 'fb_social_comments'),
      'parent' => 'fb_social_boxes_default',
    ),
  );

  return $info;
}

/**
 * Does $preset should be shown on node of type $type
 */
function fb_social_comments_type($preset, $type) {
  $types = ($preset->settings['node_types']['types']);
  if (! is_array($types)) {
    return FALSE;
  }

  return in_array($type, array_values($types));
}

